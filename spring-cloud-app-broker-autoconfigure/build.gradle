/*
 * Copyright 2002-2020 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
	id 'org.springframework.boot' apply false
}

description = "Spring Cloud App Broker Autoconfiguration"

java {
	registerFeature("logging") {
		usingSourceSet(sourceSets.main)
	}
}

dependencies {
	annotationProcessor platform(SpringBootPlugin.BOM_COORDINATES)
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	annotationProcessor "org.springframework.boot:spring-boot-autoconfigure-processor"

	api platform(SpringBootPlugin.BOM_COORDINATES)
	api project(":spring-cloud-app-broker-core")
	api project(":spring-cloud-app-broker-deployer")
	api project(":spring-cloud-app-broker-deployer-cloudfoundry")
	api project(":spring-cloud-app-broker-security-credhub")
	api "org.springframework.boot:spring-boot-starter"
	api "org.cloudfoundry:cloudfoundry-client-reactor:${cfJavaClientVersion}"
	api "org.cloudfoundry:cloudfoundry-operations:${cfJavaClientVersion}"
	api "org.springframework.credhub:spring-credhub-starter:${springCredhubVersion}"

	loggingImplementation project(":spring-cloud-app-broker-logging")

	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.springframework.boot:spring-boot-starter-webflux"
	testImplementation "io.projectreactor.tools:blockhound-junit-platform:${blockHoundVersion}"

	testRuntimeOnly "org.junit.platform:junit-platform-launcher"
}

compileJava.dependsOn(processResources)
