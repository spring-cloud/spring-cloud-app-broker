pluginManagement {
	resolutionStrategy {
		eachPlugin {
			if (requested.id.namespace?.startsWith('org.asciidoctor.jvm')) {
				useVersion("4.0.1")
			}
		}
	}
	plugins {
		id "io.spring.nohttp" version "0.0.11"
		id 'org.springframework.boot' version "3.2.3"
		id 'org.asciidoctor.jvm.pdf'
		id 'org.asciidoctor.jvm.convert'
	}
	repositories {
		gradlePluginPortal()
	}
}

dependencyResolutionManagement {
	repositories {
		mavenCentral()
		if (version =~ /((-M|-RC)[0-9]+|-SNAPSHOT)$/) {
			maven { url "https://repo.spring.io/milestone" }
		}
		if (version.endsWith('-SNAPSHOT')) {
			maven { url "https://repo.spring.io/snapshot" }
		}
	}
}

rootProject.name = "spring-cloud-app-broker"

include "spring-cloud-app-broker-deployer"
include "spring-cloud-app-broker-deployer-cloudfoundry"
include "spring-cloud-app-broker-docs"
include "spring-cloud-app-broker-core"
include "spring-cloud-app-broker-autoconfigure"
include "spring-cloud-app-broker-integration-tests"
include "spring-cloud-app-broker-acceptance-tests"
include "spring-cloud-starter-app-broker"
include "spring-cloud-starter-app-broker-cloudfoundry"
